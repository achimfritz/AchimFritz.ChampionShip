<?php
namespace TYPO3\Flow\Persistence\Doctrine\Migrations;

use Doctrine\DBAL\Migrations\AbstractMigration,
	Doctrine\DBAL\Schema\Schema;

/**
 * Auto-generated Migration: Please modify to your need!
 */
class Version20130922164716 extends AbstractMigration {

	/**
	 * @param Schema $schema
	 * @return void
	 */
	public function up(Schema $schema) {
			// this up() migration is autogenerated, please modify it to your needs
		$this->abortIf($this->connection->getDatabasePlatform()->getName() != "mysql");
		
		$this->addSql("RENAME TABLE achimfritz_championship_domain_model_crossgrouproundmatch TO achimfritz_championship_domain_model_crossgroupmatch");
		#$this->addSql("CREATE TABLE achimfritz_championship_domain_model_crossgroupmatch (persistence_object_identifier VARCHAR(40) NOT NULL, hostgroupround VARCHAR(40) DEFAULT NULL, guestgroupround VARCHAR(40) DEFAULT NULL, hostgrouprank INT NOT NULL, guestgrouprank INT NOT NULL, INDEX IDX_C1673F058883CEF (hostgroupround), INDEX IDX_C1673F053CC82627 (guestgroupround), PRIMARY KEY(persistence_object_identifier)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB");
		$this->addSql("ALTER TABLE achimfritz_championship_domain_model_crossgroupmatch ADD CONSTRAINT FK_C1673F058883CEF FOREIGN KEY (hostgroupround) REFERENCES achimfritz_championship_domain_model_groupround (persistence_object_identifier)");
		$this->addSql("ALTER TABLE achimfritz_championship_domain_model_crossgroupmatch ADD CONSTRAINT FK_C1673F053CC82627 FOREIGN KEY (guestgroupround) REFERENCES achimfritz_championship_domain_model_groupround (persistence_object_identifier)");
		$this->addSql("ALTER TABLE achimfritz_championship_domain_model_crossgroupmatch ADD CONSTRAINT FK_C1673F0547A46B0A FOREIGN KEY (persistence_object_identifier) REFERENCES achimfritz_championship_domain_model_match (persistence_object_identifier) ON DELETE CASCADE");
	}

	/**
	 * @param Schema $schema
	 * @return void
	 */
	public function down(Schema $schema) {
			// this down() migration is autogenerated, please modify it to your needs
		$this->abortIf($this->connection->getDatabasePlatform()->getName() != "mysql");
		
	}
}

?>
